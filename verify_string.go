// Code generated by "stringer -type=Status,Reason -output verify_string.go verify.go"; DO NOT EDIT.

package skate

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StatusUnknown-0]
	_ = x[StatusExact-1]
	_ = x[StatusStrong-2]
	_ = x[StatusWeak-3]
	_ = x[StatusDifferent-4]
	_ = x[StatusAmbiguous-5]
}

const _Status_name = "StatusUnknownStatusExactStatusStrongStatusWeakStatusDifferentStatusAmbiguous"

var _Status_index = [...]uint8{0, 13, 24, 36, 46, 61, 76}

func (i Status) String() string {
	if i < 0 || i >= Status(len(_Status_index)-1) {
		return "Status(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Status_name[_Status_index[i]:_Status_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ReasonUnknown-6]
	_ = x[ReasonAppendix-7]
	_ = x[ReasonArxiv-8]
	_ = x[ReasonArxivVersion-9]
	_ = x[ReasonBlacklisted-10]
	_ = x[ReasonBlacklistedFragment-11]
	_ = x[ReasonBookChapter-12]
	_ = x[ReasonChemFormula-13]
	_ = x[ReasonComponent-14]
	_ = x[ReasonContainer-15]
	_ = x[ReasonContainerNameBlacklist-16]
	_ = x[ReasonContribIntersectionEmpty-17]
	_ = x[ReasonCustomBSISubdoc-18]
	_ = x[ReasonCustomBSIUndated-19]
	_ = x[ReasonCustomIEEEArxiv-20]
	_ = x[ReasonCustomIOPMAPattern-21]
	_ = x[ReasonCustomPrefix1014288-22]
	_ = x[ReasonCustomPrefix105860ChoiceReview-23]
	_ = x[ReasonCustomPrefix107916-24]
	_ = x[ReasonCustomVHS-25]
	_ = x[ReasonDOI-26]
	_ = x[ReasonDataciteRelatedID-27]
	_ = x[ReasonDataciteVersion-28]
	_ = x[ReasonDatasetDOI-29]
	_ = x[ReasonFigshareVersion-30]
	_ = x[ReasonJaccardAuthors-31]
	_ = x[ReasonJstorID-32]
	_ = x[ReasonMaxClusterSizeExceeded-33]
	_ = x[ReasonNumDiff-34]
	_ = x[ReasonPMCID-35]
	_ = x[ReasonPMID-36]
	_ = x[ReasonPMIDDOIPair-37]
	_ = x[ReasonPageCount-38]
	_ = x[ReasonPreprintPublished-39]
	_ = x[ReasonPublisherBlacklist-40]
	_ = x[ReasonReleaseType-41]
	_ = x[ReasonSharedDOIPrefix-42]
	_ = x[ReasonShortTitle-43]
	_ = x[ReasonSingularCluster-44]
	_ = x[ReasonSlugTitleAuthorMatch-45]
	_ = x[ReasonSubtitle-46]
	_ = x[ReasonTitleArtifact-47]
	_ = x[ReasonTitleAuthorMatch-48]
	_ = x[ReasonTitleFilename-49]
	_ = x[ReasonTokenizedAuthors-50]
	_ = x[ReasonVersionedDOI-51]
	_ = x[ReasonWorkID-52]
	_ = x[ReasonYear-53]
}

const _Reason_name = "ReasonUnknownReasonAppendixReasonArxivReasonArxivVersionReasonBlacklistedReasonBlacklistedFragmentReasonBookChapterReasonChemFormulaReasonComponentReasonContainerReasonContainerNameBlacklistReasonContribIntersectionEmptyReasonCustomBSISubdocReasonCustomBSIUndatedReasonCustomIEEEArxivReasonCustomIOPMAPatternReasonCustomPrefix1014288ReasonCustomPrefix105860ChoiceReviewReasonCustomPrefix107916ReasonCustomVHSReasonDOIReasonDataciteRelatedIDReasonDataciteVersionReasonDatasetDOIReasonFigshareVersionReasonJaccardAuthorsReasonJstorIDReasonMaxClusterSizeExceededReasonNumDiffReasonPMCIDReasonPMIDReasonPMIDDOIPairReasonPageCountReasonPreprintPublishedReasonPublisherBlacklistReasonReleaseTypeReasonSharedDOIPrefixReasonShortTitleReasonSingularClusterReasonSlugTitleAuthorMatchReasonSubtitleReasonTitleArtifactReasonTitleAuthorMatchReasonTitleFilenameReasonTokenizedAuthorsReasonVersionedDOIReasonWorkIDReasonYear"

var _Reason_index = [...]uint16{0, 13, 27, 38, 56, 73, 98, 115, 132, 147, 162, 190, 220, 241, 263, 284, 308, 333, 369, 393, 408, 417, 440, 461, 477, 498, 518, 531, 559, 572, 583, 593, 610, 625, 648, 672, 689, 710, 726, 747, 773, 787, 806, 828, 847, 869, 887, 899, 909}

func (i Reason) String() string {
	i -= 6
	if i < 0 || i >= Reason(len(_Reason_index)-1) {
		return "Reason(" + strconv.FormatInt(int64(i+6), 10) + ")"
	}
	return _Reason_name[_Reason_index[i]:_Reason_index[i+1]]
}
